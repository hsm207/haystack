services:

  haystack-api:
    image: "deepset/haystack:cpu"
    # Mount custom Pipeline YAML and custom Components.
    # volumes:
    #   - ./rest_api/pipeline:/home/user/rest_api/pipeline
    ports:
      - 8000:8000
    restart: on-failure
    environment:
      # See rest_api/pipeline/pipelines.haystack-pipeline.yml for configurations of Search & Indexing Pipeline.
      - DOCUMENTSTORE_PARAMS_HOST=elasticsearch
      - PIPELINE_YAML_PATH=/opt/venv/lib/python3.10/site-packages/rest_api/pipeline/pipelines_dpr.haystack-pipeline.yml
      - QUERY_PIPELINE_NAME=query
    depends_on:
      elasticsearch:
        condition: service_healthy

  elasticsearch:
    # This will start an empty elasticsearch instance (so you have to add your documents yourself)
    #image: "elasticsearch:7.9.2"
    # If you want a demo image instead that is "ready-to-query" with some indexed articles
    # about countries and capital cities from Wikipedia:
    image: "deepset/elasticsearch-countries-and-capitals"
    ports:
      - 9200:9200
    restart: on-failure
    environment:
      - discovery.type=single-node
    healthcheck:
        test: curl --fail http://localhost:9200/_cat/health || exit 1
        interval: 10s
        timeout: 1s
        retries: 10

  ui:
    depends_on:
      - haystack-api
    build:
      context: ui
      dockerfile: Dockerfile
    ports:
      - 8501:8501
    restart: on-failure
    environment:
      - API_ENDPOINT=http://haystack-api:8000
      - EVAL_FILE=ui/eval_labels_example.csv
      # The value of the following variables will be read from the host, if present.
      # They can also be temporarily set for docker-compose, for example:
      # DISABLE_FILE_UPLOAD=1 DEFAULT_DOCS_FROM_RETRIEVER=5 docker-compose up
      - DISABLE_FILE_UPLOAD
      - DEFAULT_QUESTION_AT_STARTUP
      - DEFAULT_DOCS_FROM_RETRIEVER
      - DEFAULT_NUMBER_OF_ANSWERS
    command: "/bin/bash -c 'sleep 15 && python -m streamlit run ui/webapp.py'"
